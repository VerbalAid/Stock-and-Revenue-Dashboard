Question 1 - Extracting Tesla Stock Data Using yfinance
import yfinance as yf
import pandas as pd

# Create a Ticker object for Tesla
tesla = yf.Ticker("TSLA")

# Extract stock information and save it in a dataframe
tesla_data = tesla.history(period="max")

# Reset the index
tesla_data.reset_index(inplace=True)

# Display the first five rows
print(tesla_data.head())

Question 2 - Extracting Tesla Revenue Data Using Webscraping 
import requests
from bs4 import BeautifulSoup
import pandas as pd

# Download the webpage
url = "https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-PY0220EN-SkillsNetwork/labs/project/revenue.htm"
html_data = requests.get(url).content

# Parse the HTML data
soup = BeautifulSoup(html_data, "html.parser")

# Find the Tesla Revenue table
tables = soup.find_all('table')
for table in tables:
    if "Tesla Quarterly Revenue" in str(table):
        tesla_revenue_table = table
        break

# Extract rows from the table
tesla_revenue = pd.DataFrame(columns=["Date", "Revenue"])
for row in tesla_revenue_table.find_all('tr')[1:]:
    col = row.find_all('td')
    date = col[0].text
    revenue = col[1].text.replace(',', '').replace('$', '')
    tesla_revenue = pd.concat([tesla_revenue, pd.DataFrame([[date, revenue]], columns=["Date", "Revenue"])], ignore_index=True)

# Clean the DataFrame
tesla_revenue = tesla_revenue[tesla_revenue["Revenue"] != ""]
tesla_revenue.dropna(inplace=True)

# Display the last five rows
print(tesla_revenue.tail())

Question 3 - Extracting GameStop Stock Data Using yfinance
# Create a Ticker object for GameStop
gamestop = yf.Ticker("GME")

# Extract stock information and save it in a dataframe
gamestop_data = gamestop.history(period="max")

# Reset the index
gamestop_data.reset_index(inplace=True)

# Display the first five rows
print(gamestop_data.head())

Question 4 - Extracting GameStop Revenue Data Using Webscraping
# Download the webpage
url = "https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-PY0220EN-SkillsNetwork/labs/project/revenue.htm"
html_data = requests.get(url).content

# Parse the HTML data
soup = BeautifulSoup(html_data, "html.parser")

# Find the GameStop Revenue table
for table in tables:
    if "GameStop Quarterly Revenue" in str(table):
        gamestop_revenue_table = table
        break

# Extract rows from the table
gamestop_revenue = pd.DataFrame(columns=["Date", "Revenue"])
for row in gamestop_revenue_table.find_all('tr')[1:]:
    col = row.find_all('td')
    date = col[0].text
    revenue = col[1].text.replace(',', '').replace('$', '')
    gamestop_revenue = pd.concat([gamestop_revenue, pd.DataFrame([[date, revenue]], columns=["Date", "Revenue"])], ignore_index=True)

# Clean the DataFrame
gamestop_revenue = gamestop_revenue[gamestop_revenue["Revenue"] != ""]
gamestop_revenue.dropna(inplace=True)

# Display the last five rows
print(gamestop_revenue.tail())

Question 5 - Tesla Stock and Revenue Dashboard
import plotly.graph_objects as go
from plotly.subplots import make_subplots
import pandas as pd

def make_graph(stock_data, revenue_data, stock):
    fig = make_subplots(rows=2, cols=1, shared_xaxes=True, 
                        subplot_titles=("Historical Share Price", "Historical Revenue"), vertical_spacing=0.3)

    stock_data_specific = stock_data[stock_data.Date <= '2021-06-14']
    revenue_data_specific = revenue_data[revenue_data.Date <= '2021-04-30']

    fig.add_trace(go.Scatter(x=pd.to_datetime(stock_data_specific.Date), 
                             y=stock_data_specific.Close.astype("float"), name="Share Price"), row=1, col=1)

    fig.add_trace(go.Scatter(x=pd.to_datetime(revenue_data_specific.Date), 
                             y=revenue_data_specific.Revenue.astype("float"), name="Revenue"), row=2, col=1)

    fig.update_xaxes(title_text="Date", row=1, col=1)
    fig.update_xaxes(title_text="Date", row=2, col=1)
    fig.update_yaxes(title_text="Price ($US)", row=1, col=1)
    fig.update_yaxes(title_text="Revenue ($US Millions)", row=2, col=1)
    fig.update_layout(showlegend=False, height=900, title=stock, xaxis_rangeslider_visible=True)
    fig.show()

# Generate Tesla Dashboard
make_graph(tesla_data, tesla_revenue, "Tesla")

Question 6 - GameStop Stock and Revenue Dashboard
# Generate GameStop Dashboard
make_graph(gamestop_data, gamestop_revenue, "GameStop")
